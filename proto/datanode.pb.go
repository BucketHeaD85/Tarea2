// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.13.0
// source: datanode.proto

package proto

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CodigoStatusSubida int32

const (
	CodigoStatusSubida_Desconocido CodigoStatusSubida = 0
	CodigoStatusSubida_Exitoso     CodigoStatusSubida = 1
	CodigoStatusSubida_Fallido     CodigoStatusSubida = 2
)

// Enum value maps for CodigoStatusSubida.
var (
	CodigoStatusSubida_name = map[int32]string{
		0: "Desconocido",
		1: "Exitoso",
		2: "Fallido",
	}
	CodigoStatusSubida_value = map[string]int32{
		"Desconocido": 0,
		"Exitoso":     1,
		"Fallido":     2,
	}
)

func (x CodigoStatusSubida) Enum() *CodigoStatusSubida {
	p := new(CodigoStatusSubida)
	*p = x
	return p
}

func (x CodigoStatusSubida) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CodigoStatusSubida) Descriptor() protoreflect.EnumDescriptor {
	return file_datanode_proto_enumTypes[0].Descriptor()
}

func (CodigoStatusSubida) Type() protoreflect.EnumType {
	return &file_datanode_proto_enumTypes[0]
}

func (x CodigoStatusSubida) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CodigoStatusSubida.Descriptor instead.
func (CodigoStatusSubida) EnumDescriptor() ([]byte, []int) {
	return file_datanode_proto_rawDescGZIP(), []int{0}
}

type Chunk struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Contenido []byte `protobuf:"bytes,1,opt,name=Contenido,proto3" json:"Contenido,omitempty"`
}

func (x *Chunk) Reset() {
	*x = Chunk{}
	if protoimpl.UnsafeEnabled {
		mi := &file_datanode_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Chunk) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Chunk) ProtoMessage() {}

func (x *Chunk) ProtoReflect() protoreflect.Message {
	mi := &file_datanode_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Chunk.ProtoReflect.Descriptor instead.
func (*Chunk) Descriptor() ([]byte, []int) {
	return file_datanode_proto_rawDescGZIP(), []int{0}
}

func (x *Chunk) GetContenido() []byte {
	if x != nil {
		return x.Contenido
	}
	return nil
}

type StatusSubida struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mensaje string             `protobuf:"bytes,1,opt,name=Mensaje,proto3" json:"Mensaje,omitempty"`
	Codigo  CodigoStatusSubida `protobuf:"varint,2,opt,name=Codigo,proto3,enum=proto.CodigoStatusSubida" json:"Codigo,omitempty"`
}

func (x *StatusSubida) Reset() {
	*x = StatusSubida{}
	if protoimpl.UnsafeEnabled {
		mi := &file_datanode_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StatusSubida) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatusSubida) ProtoMessage() {}

func (x *StatusSubida) ProtoReflect() protoreflect.Message {
	mi := &file_datanode_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatusSubida.ProtoReflect.Descriptor instead.
func (*StatusSubida) Descriptor() ([]byte, []int) {
	return file_datanode_proto_rawDescGZIP(), []int{1}
}

func (x *StatusSubida) GetMensaje() string {
	if x != nil {
		return x.Mensaje
	}
	return ""
}

func (x *StatusSubida) GetCodigo() CodigoStatusSubida {
	if x != nil {
		return x.Codigo
	}
	return CodigoStatusSubida_Desconocido
}

type Setup struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NumChunks int64  `protobuf:"varint,1,opt,name=numChunks,proto3" json:"numChunks,omitempty"`
	Titulo    string `protobuf:"bytes,2,opt,name=titulo,proto3" json:"titulo,omitempty"`
}

func (x *Setup) Reset() {
	*x = Setup{}
	if protoimpl.UnsafeEnabled {
		mi := &file_datanode_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Setup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Setup) ProtoMessage() {}

func (x *Setup) ProtoReflect() protoreflect.Message {
	mi := &file_datanode_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Setup.ProtoReflect.Descriptor instead.
func (*Setup) Descriptor() ([]byte, []int) {
	return file_datanode_proto_rawDescGZIP(), []int{2}
}

func (x *Setup) GetNumChunks() int64 {
	if x != nil {
		return x.NumChunks
	}
	return 0
}

func (x *Setup) GetTitulo() string {
	if x != nil {
		return x.Titulo
	}
	return ""
}

type Solicitud struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NombreChunk string `protobuf:"bytes,1,opt,name=NombreChunk,proto3" json:"NombreChunk,omitempty"`
}

func (x *Solicitud) Reset() {
	*x = Solicitud{}
	if protoimpl.UnsafeEnabled {
		mi := &file_datanode_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Solicitud) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Solicitud) ProtoMessage() {}

func (x *Solicitud) ProtoReflect() protoreflect.Message {
	mi := &file_datanode_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Solicitud.ProtoReflect.Descriptor instead.
func (*Solicitud) Descriptor() ([]byte, []int) {
	return file_datanode_proto_rawDescGZIP(), []int{3}
}

func (x *Solicitud) GetNombreChunk() string {
	if x != nil {
		return x.NombreChunk
	}
	return ""
}

var File_datanode_proto protoreflect.FileDescriptor

var file_datanode_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x64, 0x61, 0x74, 0x61, 0x6e, 0x6f, 0x64, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x05, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x25, 0x0a, 0x05, 0x43, 0x68, 0x75, 0x6e, 0x6b,
	0x12, 0x1c, 0x0a, 0x09, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x69, 0x64, 0x6f, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x09, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x69, 0x64, 0x6f, 0x22, 0x5b,
	0x0a, 0x0c, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x53, 0x75, 0x62, 0x69, 0x64, 0x61, 0x12, 0x18,
	0x0a, 0x07, 0x4d, 0x65, 0x6e, 0x73, 0x61, 0x6a, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x4d, 0x65, 0x6e, 0x73, 0x61, 0x6a, 0x65, 0x12, 0x31, 0x0a, 0x06, 0x43, 0x6f, 0x64, 0x69,
	0x67, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x43, 0x6f, 0x64, 0x69, 0x67, 0x6f, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x53, 0x75, 0x62,
	0x69, 0x64, 0x61, 0x52, 0x06, 0x43, 0x6f, 0x64, 0x69, 0x67, 0x6f, 0x22, 0x3d, 0x0a, 0x05, 0x53,
	0x65, 0x74, 0x75, 0x70, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x75, 0x6d, 0x43, 0x68, 0x75, 0x6e, 0x6b,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x6e, 0x75, 0x6d, 0x43, 0x68, 0x75, 0x6e,
	0x6b, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x69, 0x74, 0x75, 0x6c, 0x6f, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x74, 0x69, 0x74, 0x75, 0x6c, 0x6f, 0x22, 0x2d, 0x0a, 0x09, 0x53, 0x6f,
	0x6c, 0x69, 0x63, 0x69, 0x74, 0x75, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x4e, 0x6f, 0x6d, 0x62, 0x72,
	0x65, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x4e, 0x6f,
	0x6d, 0x62, 0x72, 0x65, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x2a, 0x3f, 0x0a, 0x12, 0x43, 0x6f, 0x64,
	0x69, 0x67, 0x6f, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x53, 0x75, 0x62, 0x69, 0x64, 0x61, 0x12,
	0x0f, 0x0a, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x6f, 0x6e, 0x6f, 0x63, 0x69, 0x64, 0x6f, 0x10, 0x00,
	0x12, 0x0b, 0x0a, 0x07, 0x45, 0x78, 0x69, 0x74, 0x6f, 0x73, 0x6f, 0x10, 0x01, 0x12, 0x0b, 0x0a,
	0x07, 0x46, 0x61, 0x6c, 0x6c, 0x69, 0x64, 0x6f, 0x10, 0x02, 0x32, 0xa5, 0x01, 0x0a, 0x0e, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x69, 0x6f, 0x53, 0x75, 0x62, 0x69, 0x64, 0x61, 0x12, 0x33, 0x0a,
	0x0c, 0x53, 0x75, 0x62, 0x69, 0x72, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x6f, 0x12, 0x0c, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x1a, 0x13, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x53, 0x75, 0x62, 0x69, 0x64, 0x61,
	0x28, 0x01, 0x12, 0x34, 0x0a, 0x10, 0x44, 0x65, 0x73, 0x63, 0x61, 0x72, 0x67, 0x61, 0x72, 0x41,
	0x72, 0x63, 0x68, 0x69, 0x76, 0x6f, 0x12, 0x10, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53,
	0x6f, 0x6c, 0x69, 0x63, 0x69, 0x74, 0x75, 0x64, 0x1a, 0x0c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x30, 0x01, 0x12, 0x28, 0x0a, 0x0a, 0x41, 0x63, 0x75, 0x73,
	0x6f, 0x45, 0x6e, 0x76, 0x69, 0x6f, 0x12, 0x0c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53,
	0x65, 0x74, 0x75, 0x70, 0x1a, 0x0c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x65, 0x74,
	0x75, 0x70, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_datanode_proto_rawDescOnce sync.Once
	file_datanode_proto_rawDescData = file_datanode_proto_rawDesc
)

func file_datanode_proto_rawDescGZIP() []byte {
	file_datanode_proto_rawDescOnce.Do(func() {
		file_datanode_proto_rawDescData = protoimpl.X.CompressGZIP(file_datanode_proto_rawDescData)
	})
	return file_datanode_proto_rawDescData
}

var file_datanode_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_datanode_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_datanode_proto_goTypes = []interface{}{
	(CodigoStatusSubida)(0), // 0: proto.CodigoStatusSubida
	(*Chunk)(nil),           // 1: proto.Chunk
	(*StatusSubida)(nil),    // 2: proto.StatusSubida
	(*Setup)(nil),           // 3: proto.Setup
	(*Solicitud)(nil),       // 4: proto.Solicitud
}
var file_datanode_proto_depIdxs = []int32{
	0, // 0: proto.StatusSubida.Codigo:type_name -> proto.CodigoStatusSubida
	1, // 1: proto.ServicioSubida.SubirArchivo:input_type -> proto.Chunk
	4, // 2: proto.ServicioSubida.DescargarArchivo:input_type -> proto.Solicitud
	3, // 3: proto.ServicioSubida.AcusoEnvio:input_type -> proto.Setup
	2, // 4: proto.ServicioSubida.SubirArchivo:output_type -> proto.StatusSubida
	1, // 5: proto.ServicioSubida.DescargarArchivo:output_type -> proto.Chunk
	3, // 6: proto.ServicioSubida.AcusoEnvio:output_type -> proto.Setup
	4, // [4:7] is the sub-list for method output_type
	1, // [1:4] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_datanode_proto_init() }
func file_datanode_proto_init() {
	if File_datanode_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_datanode_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Chunk); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_datanode_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StatusSubida); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_datanode_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Setup); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_datanode_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Solicitud); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_datanode_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_datanode_proto_goTypes,
		DependencyIndexes: file_datanode_proto_depIdxs,
		EnumInfos:         file_datanode_proto_enumTypes,
		MessageInfos:      file_datanode_proto_msgTypes,
	}.Build()
	File_datanode_proto = out.File
	file_datanode_proto_rawDesc = nil
	file_datanode_proto_goTypes = nil
	file_datanode_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// ServicioSubidaClient is the client API for ServicioSubida service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ServicioSubidaClient interface {
	SubirArchivo(ctx context.Context, opts ...grpc.CallOption) (ServicioSubida_SubirArchivoClient, error)
	DescargarArchivo(ctx context.Context, in *Solicitud, opts ...grpc.CallOption) (ServicioSubida_DescargarArchivoClient, error)
	AcusoEnvio(ctx context.Context, in *Setup, opts ...grpc.CallOption) (*Setup, error)
}

type servicioSubidaClient struct {
	cc grpc.ClientConnInterface
}

func NewServicioSubidaClient(cc grpc.ClientConnInterface) ServicioSubidaClient {
	return &servicioSubidaClient{cc}
}

func (c *servicioSubidaClient) SubirArchivo(ctx context.Context, opts ...grpc.CallOption) (ServicioSubida_SubirArchivoClient, error) {
	stream, err := c.cc.NewStream(ctx, &_ServicioSubida_serviceDesc.Streams[0], "/proto.ServicioSubida/SubirArchivo", opts...)
	if err != nil {
		return nil, err
	}
	x := &servicioSubidaSubirArchivoClient{stream}
	return x, nil
}

type ServicioSubida_SubirArchivoClient interface {
	Send(*Chunk) error
	CloseAndRecv() (*StatusSubida, error)
	grpc.ClientStream
}

type servicioSubidaSubirArchivoClient struct {
	grpc.ClientStream
}

func (x *servicioSubidaSubirArchivoClient) Send(m *Chunk) error {
	return x.ClientStream.SendMsg(m)
}

func (x *servicioSubidaSubirArchivoClient) CloseAndRecv() (*StatusSubida, error) {
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	m := new(StatusSubida)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *servicioSubidaClient) DescargarArchivo(ctx context.Context, in *Solicitud, opts ...grpc.CallOption) (ServicioSubida_DescargarArchivoClient, error) {
	stream, err := c.cc.NewStream(ctx, &_ServicioSubida_serviceDesc.Streams[1], "/proto.ServicioSubida/DescargarArchivo", opts...)
	if err != nil {
		return nil, err
	}
	x := &servicioSubidaDescargarArchivoClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type ServicioSubida_DescargarArchivoClient interface {
	Recv() (*Chunk, error)
	grpc.ClientStream
}

type servicioSubidaDescargarArchivoClient struct {
	grpc.ClientStream
}

func (x *servicioSubidaDescargarArchivoClient) Recv() (*Chunk, error) {
	m := new(Chunk)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *servicioSubidaClient) AcusoEnvio(ctx context.Context, in *Setup, opts ...grpc.CallOption) (*Setup, error) {
	out := new(Setup)
	err := c.cc.Invoke(ctx, "/proto.ServicioSubida/AcusoEnvio", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ServicioSubidaServer is the server API for ServicioSubida service.
type ServicioSubidaServer interface {
	SubirArchivo(ServicioSubida_SubirArchivoServer) error
	DescargarArchivo(*Solicitud, ServicioSubida_DescargarArchivoServer) error
	AcusoEnvio(context.Context, *Setup) (*Setup, error)
}

// UnimplementedServicioSubidaServer can be embedded to have forward compatible implementations.
type UnimplementedServicioSubidaServer struct {
}

func (*UnimplementedServicioSubidaServer) SubirArchivo(ServicioSubida_SubirArchivoServer) error {
	return status.Errorf(codes.Unimplemented, "method SubirArchivo not implemented")
}
func (*UnimplementedServicioSubidaServer) DescargarArchivo(*Solicitud, ServicioSubida_DescargarArchivoServer) error {
	return status.Errorf(codes.Unimplemented, "method DescargarArchivo not implemented")
}
func (*UnimplementedServicioSubidaServer) AcusoEnvio(context.Context, *Setup) (*Setup, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AcusoEnvio not implemented")
}

func RegisterServicioSubidaServer(s *grpc.Server, srv ServicioSubidaServer) {
	s.RegisterService(&_ServicioSubida_serviceDesc, srv)
}

func _ServicioSubida_SubirArchivo_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(ServicioSubidaServer).SubirArchivo(&servicioSubidaSubirArchivoServer{stream})
}

type ServicioSubida_SubirArchivoServer interface {
	SendAndClose(*StatusSubida) error
	Recv() (*Chunk, error)
	grpc.ServerStream
}

type servicioSubidaSubirArchivoServer struct {
	grpc.ServerStream
}

func (x *servicioSubidaSubirArchivoServer) SendAndClose(m *StatusSubida) error {
	return x.ServerStream.SendMsg(m)
}

func (x *servicioSubidaSubirArchivoServer) Recv() (*Chunk, error) {
	m := new(Chunk)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _ServicioSubida_DescargarArchivo_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(Solicitud)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(ServicioSubidaServer).DescargarArchivo(m, &servicioSubidaDescargarArchivoServer{stream})
}

type ServicioSubida_DescargarArchivoServer interface {
	Send(*Chunk) error
	grpc.ServerStream
}

type servicioSubidaDescargarArchivoServer struct {
	grpc.ServerStream
}

func (x *servicioSubidaDescargarArchivoServer) Send(m *Chunk) error {
	return x.ServerStream.SendMsg(m)
}

func _ServicioSubida_AcusoEnvio_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Setup)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ServicioSubidaServer).AcusoEnvio(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.ServicioSubida/AcusoEnvio",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ServicioSubidaServer).AcusoEnvio(ctx, req.(*Setup))
	}
	return interceptor(ctx, in, info, handler)
}

var _ServicioSubida_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.ServicioSubida",
	HandlerType: (*ServicioSubidaServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "AcusoEnvio",
			Handler:    _ServicioSubida_AcusoEnvio_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "SubirArchivo",
			Handler:       _ServicioSubida_SubirArchivo_Handler,
			ClientStreams: true,
		},
		{
			StreamName:    "DescargarArchivo",
			Handler:       _ServicioSubida_DescargarArchivo_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "datanode.proto",
}
